[build-system]
requires = ["setuptools>=61.2"]
build-backend = "setuptools.build_meta"

[project]
name = "TF-MNF"
version = "0.1.0"
authors = [{ name = "Janosh Riebesell", email = "janosh.riebesell@gmail.com" }]
readme = "readme.md"
description = "TensorFlow 2.0 implementation of Multiplicative Normalizing Flows"
urls = { Homepage = "https://github.com/janosh/tf-mnf" }
license = { file = "license" }

[tool.mypy]
no_implicit_optional = false

[tool.ruff]
target-version = "py38"

[tool.ruff.lint]
select = [
  "B",      # flake8-bugbear
  "C4",     # flake8-comprehensions
  "D",      # pydocstyle
  "E",      # pycodestyle error
  "EXE",    # flake8-executable
  "F",      # pyflakes
  "FA",     # flake8-future-annotations
  "FBT003", # boolean-positional-value-in-call
  "FLY",    # flynt
  "I",      # isort
  "ICN",    # flake8-import-conventions
  "ISC",    # flake8-implicit-str-concat
  "PD",     # pandas-vet
  "PERF",   # perflint
  "PIE",    # flake8-pie
  "PL",     # pylint
  "PT",     # flake8-pytest-style
  "PYI",    # flakes8-pyi
  "Q",      # flake8-quotes
  "RET",    # flake8-return
  "RSE",    # flake8-raise
  "RUF",    # Ruff-specific rules
  "SIM",    # flake8-simplify
  "SLOT",   # flake8-slots
  "TCH",    # flake8-type-checking
  "TID",    # tidy imports
  "TID",    # flake8-tidy-imports
  "UP",     # pyupgrade
  "W",      # pycodestyle warning
  "YTT",    # flake8-2020
]
ignore = [
  "D100",    # Missing docstring in public module
  "D104",    # Missing docstring in public package
  "D205",    # 1 blank line required between summary line and description
  "E731",    # Do not assign a lambda expression, use a def
  "PD901",   # pandas-df-variable-name
  "PLC0414", # useless-import-alias
  "PLR0913", # too-many-arguments
  "SIM105",  # Use contextlib.suppress(FileNotFoundError) instead of try-except-pass
  "SIM115",  # Use context handler for opening files
]
pydocstyle.convention = "google"
isort.lines-after-imports = 2

[tool.ty.rules]
unresolved-import = "ignore"
